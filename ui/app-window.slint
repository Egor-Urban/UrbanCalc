import { Palette, HorizontalBox, VerticalBox, GridBox, Button, LineEdit, ScrollView } from "std-widgets.slint";

export global AppTheme {
    in property <color> background;
    in property <color> text;
}

export enum ButtonType {
    number,
    operator,
    function,
    parenthesis,
    decimal,
    clear,
    equals
}

component CalcButton inherits Rectangle {
    in-out property <string> text <=> txt.text;
    in-out property <image> icon <=> icon.source;
    in-out property <bool> compact: false;
    in-out property <color> button-color: #456;
    in-out property <color> hover-color: #39434D;
    in-out property <color> pressed-color: #162D42;
    in-out property <length> font_size: 15pt;
    in-out property <length> borders_radius: 15px;
    in-out property <color> text-color: white;
    in-out property <ButtonType> button-type: ButtonType.number;
    in-out property <string> button-id: "";

    callback clicked(ButtonType, string);
    horizontal-stretch: compact ? 0 : 1;
    vertical-stretch: compact ? 0 : 1;
    min-width: max(txt.preferred-width, icon.width) + 16px;
    min-height: max(txt.preferred-width, icon.width) + 12px;
    preferred-width: max(txt.preferred-width, icon.width) + 16px;
    preferred-height: max(txt.preferred-width, icon.width) + 12px;
    border-radius: borders_radius;
    border-width: 1px;
    border-color: root.background.darker(25%);
    background: touch.pressed ? pressed-color : touch.has-hover ? hover-color : button-color;
    
    txt := Text {
        x: (parent.width - self.preferred-width)/2; 
        y: (parent.height - self.preferred-height)/2;
        color: text-color;
        font-size: font_size;
        font-weight: 500;
    }
    
    icon := Image {
        x: (parent.width - self.width)/2;
        y: (parent.height - self.height)/2; 
    }
    
    touch := TouchArea { 
        clicked => {
            root.clicked(root.button-type, root.button-id);
        }
    }
}

export component MainWindow inherits Window {
    min-width: 350px;
    min-height: 500px;
    horizontal-stretch: 1;
    vertical-stretch: 1;


    title: "Calculator";
    in property <image> backspace: @image-url("icons/backspace.svg");
    in property <image> divide: @image-url("icons/divide.svg");
    in property <image> clear: @image-url("icons/clear.svg");
    in property <image> multiple: @image-url("icons/multiple.svg");
    in property <image> minus: @image-url("icons/minus.svg");
    in property <image> plus: @image-url("icons/plus.svg");
    in property <image> equal: @image-url("icons/equal.svg");
    in property <image> dot: @image-url("icons/dot.svg");
    in property <image> nul: @image-url("icons/null.svg");
    in property <image> settings: @image-url("icons/settings.svg");
    in-out property <string> expression_text: "";
    in-out property <string> result_text: "0";
    callback button-pressed(ButtonType, string);


    background: AppTheme.background;

    VerticalBox {
        horizontal-stretch: 1;
        vertical-stretch: 1;

        // Settings
        HorizontalBox {
            padding: 0;
            spacing: 5px;
            
            CalcButton {
                icon: settings;
                compact: true;
                font_size: 12pt;
                borders_radius: 10px;
                button-color: #666;
                hover-color: #777;
                pressed-color: #555;
                button-type: ButtonType.function;
                button-id: "settings";
                clicked(type, id) => { root.button-pressed(type, id); }
            }
            Rectangle { horizontal-stretch: 1; }
        }
        
        Rectangle {
            horizontal-stretch: 1;
            height: 120px;
            background: AppTheme.background.darker(10%);
            border-radius: 10px;
            border-width: 2px;
            border-color: AppTheme.background.darker(30%);
            
            VerticalBox {
                horizontal-stretch: 1; // <- ключевой момент
                padding: 15px;
                spacing: 5px;

                // Primer display
                Text {
                    text: root.expression_text;
                    font-weight: 400;
                    font-size: 16pt;
                    color: AppTheme.text.transparentize(30%);
                    vertical-alignment: top;
                    horizontal-alignment: right;
                    overflow: elide;
                    horizontal-stretch: 1; // <- важно
                }

                // Main display
                Text {
                    text: root.result_text;
                    horizontal-alignment: right;
                    font-weight: 600;
                    font-size: 36pt;
                    color: AppTheme.text;
                    vertical-alignment: center;
                    overflow: elide;
                    horizontal-stretch: 1; // <- ключевой момент
                }
            }
        }


        keyboard_handler := LineEdit {
            //max-height: 1px;
            //max-width: 1px;
            min-height: 1px;
            min-width: 1px;
            opacity: 0;
            
            init => {
                self.focus();
            }

            
        key-pressed(event) => {
            if (event.text >= "0" && event.text <= "9") {
                root.button-pressed(ButtonType.number, event.text);
            } else if (event.text == "+") {
                root.button-pressed(ButtonType.operator, "plus");
            } else if (event.text == "-") {
                root.button-pressed(ButtonType.operator, "minus");
            } else if (event.text == "*") {
                root.button-pressed(ButtonType.operator, "multiply");
            } else if (event.text == "/") {
                root.button-pressed(ButtonType.operator, "divide");
            } else if (event.text == "." || event.text == ",") {
                root.button-pressed(ButtonType.decimal, "decimal");
            } else if (event.text == "(") {
                root.button-pressed(ButtonType.parenthesis, "open-paren");
            } else if (event.text == ")") {
                root.button-pressed(ButtonType.parenthesis, "close-paren");
            } else if (event.text == "=") {
                root.button-pressed(ButtonType.equals, "equals");
            } else if (event.text == "\n") {   // Enter
                root.button-pressed(ButtonType.equals, "equals");
            } else if (event.text == Key.Backspace) {   // Backspace // IMPOSTER
                root.button-pressed(ButtonType.function, "backspace");
            } else if (event.text == Key.Escape) { // Delete
                root.button-pressed(ButtonType.clear, "clear");
            }
            accept
        }


        }
        padding: 10px;


        // Calc display


        // Btns
        GridLayout {
            spacing: 8px;
            vertical-stretch: 1;
            
            // 1th line: ( ) ⌫ ÷
            CalcButton {
                text: "(";
                button-color: #666;
                hover-color: #777;
                pressed-color: #555;
           
                button-type: ButtonType.parenthesis;
                button-id: "open-paren";
                clicked(type, id) => { root.button-pressed(type, id); }
            }
            CalcButton {
                text: ")";
                button-color: #666;
                hover-color: #777;
                pressed-color: #555;
                button-type: ButtonType.parenthesis;
                button-id: "close-paren";
                clicked(type, id) => { root.button-pressed(type, id);
                }
            }
            CalcButton {
                icon: backspace;
                button-color: #d9534f;
                hover-color: #c9302c;
                pressed-color: #b92c28;
                button-type: ButtonType.function;
                button-id: "backspace";
                clicked(type, id) => { root.button-pressed(type, id);
                }
            }
            CalcButton {
                icon: divide;
                button-color: #f0ad4e;
                hover-color: #ec971f;
                pressed-color: #d58512;
                button-type: ButtonType.operator;
                button-id: "divide";
                clicked(type, id) => { root.button-pressed(type, id);
                }
            }
            
            // 2th line: 7 8 9 ×
            CalcButton {
                row: 1;
                text: "7";
                button-color: #5a5a5a;
                hover-color: #6a6a6a;
                pressed-color: #4a4a4a;
                button-type: ButtonType.number;
                button-id: "7";
                clicked(type, id) => { root.button-pressed(type, id);
                }
            }
            CalcButton {
                text: "8";
                button-color: #5a5a5a;
                hover-color: #6a6a6a;
                pressed-color: #4a4a4a;
                button-type: ButtonType.number;
                button-id: "8";
                clicked(type, id) => { root.button-pressed(type, id);
                }
            }
            CalcButton {
                text: "9";
                button-color: #5a5a5a;
                hover-color: #6a6a6a;
                pressed-color: #4a4a4a;
                button-type: ButtonType.number;
                button-id: "9";
                clicked(type, id) => { root.button-pressed(type, id);
                }
            }
            CalcButton {
                icon: multiple;
                button-color: #f0ad4e;
                hover-color: #ec971f;
                pressed-color: #d58512;
                button-type: ButtonType.operator;
                button-id: "multiply";
                clicked(type, id) => { root.button-pressed(type, id);
                }
            }
            
            // 3th line: 4 5 6 -
            CalcButton {
                row: 2;
                text: "4";
                button-color: #5a5a5a;
                hover-color: #6a6a6a;
                pressed-color: #4a4a4a;
                button-type: ButtonType.number;
                button-id: "4";
                clicked(type, id) => { root.button-pressed(type, id);
                }
            }
            CalcButton {
                text: "5";
                button-color: #5a5a5a;
                hover-color: #6a6a6a;
                pressed-color: #4a4a4a;
                button-type: ButtonType.number;
                button-id: "5";
                clicked(type, id) => { root.button-pressed(type, id);
                }
            }
            CalcButton {
                text: "6";
                button-color: #5a5a5a;
                hover-color: #6a6a6a;
                pressed-color: #4a4a4a;
                button-type: ButtonType.number;
                button-id: "6";
                clicked(type, id) => { root.button-pressed(type, id);
                }
            }
            CalcButton {
                icon: minus;
                button-color: #f0ad4e;
                hover-color: #ec971f;
                pressed-color: #d58512;
                button-type: ButtonType.operator;
                button-id: "minus";
                clicked(type, id) => { root.button-pressed(type, id);
                }
            }
            
            // 4th line: 1 2 3 +
            CalcButton {
                row: 3;
                text: "1";
                button-color: #5a5a5a;
                hover-color: #6a6a6a;
                pressed-color: #4a4a4a;
                button-type: ButtonType.number;
                button-id: "1";
                clicked(type, id) => { root.button-pressed(type, id);
                }
            }
            CalcButton {
                text: "2";
                button-color: #5a5a5a;
                hover-color: #6a6a6a;
                pressed-color: #4a4a4a;
                button-type: ButtonType.number;
                button-id: "2";
                clicked(type, id) => { root.button-pressed(type, id);
                }
            }
            CalcButton {
                text: "3";
                button-color: #5a5a5a;
                hover-color: #6a6a6a;
                pressed-color: #4a4a4a;
                button-type: ButtonType.number;
                button-id: "3";
                clicked(type, id) => { root.button-pressed(type, id);
                }
            }
            CalcButton {
                icon: plus;
                button-color: #f0ad4e;
                hover-color: #ec971f;
                pressed-color: #d58512;
                button-type: ButtonType.operator;
                button-id: "plus";
                clicked(type, id) => { root.button-pressed(type, id);
                }
            }
            
            // 5th line: C 0 . =
            CalcButton {
                row: 4;
                icon: clear;
                button-color: #d9534f;
                hover-color: #c9302c;
                pressed-color: #b92c28;
                button-type: ButtonType.clear;
                button-id: "clear";
                clicked(type, id) => { root.button-pressed(type, id);
                }
            }
            CalcButton {
                icon: nul;
                button-color: #5a5a5a;
                hover-color: #6a6a6a;
                pressed-color: #4a4a4a;
                button-type: ButtonType.number;
                button-id: "0";
                clicked(type, id) => { root.button-pressed(type, id);
                }
            }
            CalcButton {
                icon: dot;
                button-color: #5a5a5a;
                hover-color: #6a6a6a;
                pressed-color: #4a4a4a;
                button-type: ButtonType.decimal;
                button-id: "decimal";
                clicked(type, id) => { root.button-pressed(type, id);
                }
            }
            CalcButton {
                icon: equal;
                button-color: #5cb85c;
                hover-color: #449d44;
                pressed-color: #398439;
                button-type: ButtonType.equals;
                button-id: "equals";
                clicked(type, id) => { root.button-pressed(type, id);
                }
            }
        }
    }
}